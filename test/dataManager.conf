#########################################
####      Logging Configuration      ####
#########################################

# Path where the logfile will be created
log_path            = /opt/hidra/logs

# Filename used for logging
log_name            = dataManager.log

# File size before rollover in B (linux only)
# 10 MB
log_size            = 10485760

# Name with which the service should be running
procname            = hidra

# IP of the interface to bind to for external communication
ext_ip              = 0.0.0.0

#########################################
####   SignalHandler Configuration   ####
#########################################

# Port number to receive signals from
com_port            = 50000

# List of hosts allowed to connect
whitelist           = ["localhost", "zitpcx19282"]

# ZMQ port to get new requests
request_port        = 50001

# ZMQ port to forward requests
# (needed if running on Windows)
request_fw_port     = 50002

# ZMQ port to disribute control signals
# (needed if running on Windows)
control_pub_port    = 50005
control_sub_port    = 50006

#########################################
####   EventDetector Configuration   ####
#########################################

# Type of event detector to use (options are:
# inotifyx_detector, watchdog_detector, zmq_detector, http_detector)
# Inotifyx is not python3 compatible,
# see https://bugs.launchpad.net/inotifyx/+bug/1006053
event_detector_type = inotifyx_detector
#event_detector_type = watchdog_detector
#event_detector_type = zmq_detector
#event_detector_type = http_detector

# Subdirectories to be monitored and to store data to
# (needed if eventDetector is inotifyx_detector or watchdog_detector
#  or if dataFetcher is file_fetcher)
fix_subdirs          = ["commissioning", "current", "local"]

# Directory to be monitor for changes
# Inside this directory only the subdirectories "commissioning", "current"
# and "local" are monitored
# (needed if event detector is inotifyx_detector or watchdog_detector)
monitored_dir        = /opt/hidra/data/source

# Event type of files (options are: IN_CLOSE_WRITE, IN_MOVED_TO, ...) and
# the formats to be monitored, files in an other format will be be neglected
# (needed if event detector is inotifyx_detector or watchdog_detector)
monitored_events     = {"IN_CLOSE_WRITE": [".tif", ".cbf", ".nxs"],
                        "IN_MOVED_TO": [".log"]}

# Number of events stored to look for doubles
# (needed if eventDetector is inotifyx_detector or http_detector)
history_size         = 0

# Flag describing if a clean up thread which regularly checks
# if some files were missed should be activated
# (needed if eventDetector is inotifyx_detector)
use_cleanup          = False

# Intervall time (in seconds) used for clean up resp. checking of events
# (only needed if event_detector_type is inotifyx_detector or watchdog_detector)
action_time          = 10

# Time (in seconds) since last modification after which a file will be seen as closed
# (needed if eventDetector is inotifyx_detector (for clean up) or watchdog_detector)
time_till_closed     = 2

# ZMQ port to get events from
# (needed if event_detector_type is zmq_detector)
event_det_port       = 50003

# IP of the Eiger detector
# (needed if event_detector_type is http_detector)
eiger_ip             = lsdma-lab04
# API version of the Eiger detector
# (needed if event_detector_type is http_detector)
eiger_api_version    = 1.5.0


#########################################
####    DataFetcher Configuration    ####
#########################################

# Module with methods specifying how to get the data
# (options are "file_fetcher", "zmq_fetcher", "http_fetcher")
data_fetcher_type    = file_fetcher
#data_fetcher_type    = zmq_fetcher
#data_fetcher_type    = http_fetcher

# If "zmq_fetcher" is specified as data_fetcher_type it needs a port to listen to
# (needed if event_detector_type is zmq_detector)
data_fetcher_port    = 50010

# Number of parallel data streams
number_of_streams    = 1

# Enable ZMQ pipe into storage system
# (uses the fixed_stream_host and fixed_stream_port)
use_data_stream      = False
# Fixed host to send the data to with highest priority
fixed_stream_host    = zitpcx19282
#fixed_stream_host    = zitpcx22614w
# Fixed Port to send the data to with highest priority
fixed_stream_port    = 50100

# Chunk size of file-parts getting send via zmq
#1024*1024*10
chunksize            = 10485760

# ZMQ-router port which coordinates the load-balancing to the worker-processes
# (needed if running on Windows)
router_port          = 50004

# Target to move the files into
local_target         = /opt/hidra/data/target

# Flag describing if the data should be stored in localTarget
# (needed if data_fetcher_type is file_fetcher or http_fetcher)
store_data           = False

# Flag describing if the files should be removed from the source
# (needed if data_fetcher_type is file_fetcher or http_fetcher)
remove_data          = False
