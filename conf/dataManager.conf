#########################################
####      Logging Configuration      ####
#########################################

# Path where the logfile will be created
logfilePath        = /opt/hidra/logs

# Filename used for logging
logfileName        = dataManager.log

# File size before rollover in B (linux only)
#10 MB
logfileSize        = 10485760

# Name with which the service should be running
procname           = hidra

# IP of the interface to bind to for external communication
extIp              = 0.0.0.0
#extIp              = zitpcx19282
#extIp              = 131.169.185.121 ; #zitpcx19282
#extIp              = 131.169.251.55 ; #asap3-p00

#########################################
####   SignalHandler Configuration   ####
#########################################

# Port number to receive signals from
comPort            = 50000

# List of hosts allowed to connect
whitelist          = ["localhost", "zitpcx19282", "zitpcx22614", "zitpcx22614w", "zitpcx22614.fritz.box", "lsdma-lab04", "haspp11eval01", "it-hpc-cxi03", "max-cfel015"]
#whitelist          = None

# ZMQ port to get new requests
requestPort        = 50001

# ZMQ port to forward requests
# (needed if running on Windows)
requestFwPort      = 50002

# ZMQ port to disribute control signals
# (needed if running on Windows)
controlPubPort     = 50005
controlSubPort     = 50006

#########################################
####   EventDetector Configuration   ####
#########################################

# Type of event detector to use
# (options are: inotifyx_detector, watchdog_detector, zmq_detector, http_detector)
# Inotifyx is not python3 compatible, see https://bugs.launchpad.net/inotifyx/+bug/1006053
eventDetectorType  = inotifyx_detector
#eventDetectorType  = watchdog_detector
#eventDetectorType  = zmq_detector
#eventDetectorType  = http_detector

# Subdirectories to be monitored and to store data to
# (needed if eventDetector is inotifyx_detector or watchdog_detector
#  or if dataFetcher is file_fetcher)
fixSubdirs         = ["commissioning", "current", "local"]

# Directory to be monitor for changes
# Inside this directory only the subdirectories "commissioning", "current"
# and "local" are monitored
# (needed if eventDetector is inotifyx_detector or watchdog_detector)
monitoredDir       = /opt/hidra/data/source
#monitoredDir       = /rd

# Event type of files (options are: IN_CLOSE_WRITE, IN_MOVED_TO, ...) and
# the formats to be monitored, files in an other format will be be neglected
# (needed if eventDetector is inotifyx_detector or watchdog_detector)
monitoredEvents = {"IN_CLOSE_WRITE" : [".tif", ".cbf", ".nxs"],
                   "IN_MOVED_TO" : [".log"]}
#monitoredEvents = {"IN_MOVED_TO" : [".tif", ".cbf", ".nxs"],
#                   "IN_CLOSE_WRITE" : [".log"]}
#monitoredEvents = {"NO_EVENT_MONITORED" : [".cbf"]}

# Number of events stored to look for doubles
# (needed if eventDetector is inotifyx_detector or http_detector)
historySize        = 0

# Flag describing if a clean up thread which regularly checks
# if some files were missed should be activated
# (needed if eventDetector is inotifyx_detector)
useCleanUp         = False

# Intervall time (in seconds) used for clean up resp. checking of events
# (only needed if eventDetectorType is inotifyx_detector or watchdog_detector)
#actionTime         = 150
actionTime         = 10

# Time (in seconds) since last modification after which a file will be seen as closed
# (needed if eventDetector is inotifyx_detector (for clean up) or watchdog_detector)
timeTillClosed     = 2

# ZMQ port to get events from
# (needed if eventDetectorType is zmq_detector)
eventDetPort       = 50003

# IP of the Eiger detector
# (needed if eventDetectorType is http_detector)
#haspp11e1m.desy.de
#eigerIp            = 192.168.138.52
eigerIp            = lsdma-lab04
#lsdma-lab04.desy.de
#eigerIp            = 131.169.55.170
# API version of the Eiger detector
# (needed if eventDetectorType is http_detector)
eigerApiVersion    = 1.5.0


#########################################
####    DataFetcher Configuration    ####
#########################################

# Module with methods specifying how to get the data
# (options are "file_fetcher", "zmq_fetcher", "http_fetcher")
dataFetcherType    = file_fetcher
#dataFetcherType    = zmq_fetcher
#dataFetcherType    = http_fetcher

# If "zmq_fetcher" is specified as dataFetcherType it needs a port to listen to
# (needed if eventDetectorType is zmq_detector)
dataFetcherPort    = 50010

# Number of parallel data streams
numberOfStreams    = 1

# Enable ZMQ pipe into storage system
# (uses the fixedStreamHost and fixedStreamPort)
useDataStream      = False
# Fixed host to send the data to with highest priority
fixedStreamHost    = zitpcx19282
#fixedStreamHost    = zitpcx22614w
# Fixed Port to send the data to with highest priority
fixedStreamPort    = 50100

# Chunk size of file-parts getting send via zmq
#1024*1024*10
chunkSize          = 10485760
#1024*1024*1024
#chunkSize          = 1073741824

# ZMQ-router port which coordinates the load-balancing to the worker-processes
# (needed if running on Windows)
routerPort         = 50004

# Target to move the files into
localTarget        = /opt/hidra/data/target
#localTarget       = /gpfs

# Flag describing if the data should be stored in localTarget
# (needed if dataFetcherType is file_fetcher or http_fetcher)
storeData          = False

# Flag describing if the files should be removed from the source
# (needed if dataFetcherType is file_fetcher or http_fetcher)
removeData         = False
