HiDRA develop

- Added option to get configured settings to hidra control client
- The connection list is now contained in a seperate module

HiDRA 3.0.0

- Automatic bump versioning
- Added generic hidra control client with included authentication (host-based)
- Clean up and consolidation of helper functions
- PEP8 compliance
- Make API classes available at the package level
- Fixed init script for Ubuntu and Debian
- Reordered directory structure
- Added DNS name support
- Added support for building RPMs
- Added automatic argument and config parsing (and fixed bugs in parsing)
- Added Python 3 support
- Renamed APIs and API arguments

HiDRA 2.4.2

- Changed process name in initScript
- Building executables with cx_Freeze
- IPC directory is set to world/write readable when created
- IPC directory is removed (if empty) when HiDRA is stopped

HiDRA 2.4.1

- Changed config file to use file mode by default

HiDRA 2.4.0

- exchanged all cPickle calls with json calls
- renamed init script to hidra.sh
- Added functional tests
- Fixing memory leaks
- Minor bug fixing
- Working C-API for data transfer (nexus use case only)
- Working C-API for data ingest
- Removed PyTango dependency
- Fixed file opening (only open and close once and keep it open)
- Example client (based on API) for controlling HiDRA remotely
- The communication with the controlling-server can be done with an API
- HiDRA can be controlled (start, stop,...) via an addtional server (HiDRAControl...)
- Working version of dataIngestAPI with dataTransferAPI (python)
- Merged nexusTransferAPI into dataTranferAPI
- Handling of open connections to known hosts with different send configurations
- Changed socket format in dataIngestAPI to IPC (on Linux)
- Fixed receiving of CLOSE_FILE messages in nexusTransferAPI
- Fixed getMetadata if no targets are specified
- Fixed IPC socket cleanup
- Tracker in ALIVE_TEST only used if ZMQ version is higher than 14.5.0 due to error in older ZMQ versions
- Fixed double adding to watch in InotifyxDetector
- Choose config file for dataReceiver
- Removed timeout warning in dataTransferAPI

HiDRA 2.3.2

- Fixed log rotation

HiDRA 2.3.1

- Fixed filename sending for requests (unicode problem)
- Fixed missing metadata if no target is specified
- Fixed parallel directory creation attempts

HiDRA 2.3.0

- Added method to dataTransferAPI to manually stop streams/queries
- Added option to specify which file formats to be send via zeromq
- Added option look for multiple event types in parallel (combined with file suffixes)
- DataManager can now be controlled via tango
- Added systemd service script
- Added cleanup arguments into config file
- Files get accessed only if data or metadata is send via zeromq
- Fixed DataReceiver (no shell)
- Added command line argument error handling
- Removed ringbuffer remains of old architecture

HiDRA 2.2.1

- Fixed data receiving problems with dataTransferAPI due to ZAP


HiDRA 2.2.0

- Fixed stopping: The service is shut down if one process dies
- Enabled whitelist for data receiver
- Added tests to check status of fixed data receiver
- Added init script
- Fixed clean up after shut down
- Enabled combination of data receiver whitelist with ldapsearch
- Added option to enable a clean up thread which checks the directory for missed files
- Version check does not consider bugfixes anymore


HiDRA 2.1.4

- Fixed copied file removal (Part 2)


HiDRA 2.1.3

- Fixed copied file removal (Part 1)


HiDRA 2.1.2

- Fixed too high processor usage
- Fixed suffix check in treewalk after creation of directory


HiDRA 2.1.1

- Fixed error handling with incorrect whitelists
- Fixed version checking
- Added file create time to metadata


HiDRA 2.1.0

- Added file removal safeguard
- Enabled use of IPC internal communication for Linux nodes
- Added exception definitions for dataTransferAPI
- Misc bug fixing


HiDRA 2.0.0

- Added functionality to get Data via HTTP Get
- Redesigned architecture

HiDRA 1.0.0

- Initial implementation
